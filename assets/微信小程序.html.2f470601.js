import{_ as n,o as s,c as a,a as t}from"./app.74a5dc6f.js";const p="/assets/Untitled.b526e089.png",o={},e=t(`<h1 id="微信小程序" tabindex="-1"><a class="header-anchor" href="#微信小程序" aria-hidden="true">#</a> 微信小程序</h1><h1 id="一、微信小程序使用" tabindex="-1"><a class="header-anchor" href="#一、微信小程序使用" aria-hidden="true">#</a> <strong>一、微信小程序使用</strong></h1><p><strong><strong>1. 小程序每个页面有哪几个文件？</strong></strong></p><ul><li>WXML： 微信自己定义的一套组件</li><li>WXSS： 用于描述 WXML 的组件样式</li><li>js： 逻辑处理</li><li>json： 小程序页面配置</li></ul><p><strong><strong>2. 小程序怎么跟随事件传值</strong></strong></p><p>在页面标签上通过绑定 dataset-key = value ， 然后绑定点击通过e.currentTarget.dataset.key 来获取标签上绑定的值。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>get<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>测试<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"> 拿到传值</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

<span class="token function">get</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><strong>3. 小程序 WXSS 与 CSS 的区别</strong></strong></p><ul><li>wxss 背景图片只能引入外链，不能使用本地图片</li><li>小程序样式使用 @import 引入外联样式文件，地址为相对路径。</li><li>尺寸单位为 rpx , rpx 是响应式像素，可以根据屏幕宽度进行自适应。</li></ul><p><strong><strong>4. 小程序的双向绑定和Vue哪里不一样。</strong></strong></p><ul><li>小程序直接使用 this.data.key = value 是不能更新到视图当中的。</li><li>必须使用 this.setData({ key ： value }) 来更新值。</li></ul><p><strong><strong>5. 小程序的生命周期函数</strong></strong></p><ul><li>onLoad： 页面加载时触发。一个页面只会调用一次，可以在 onLoad 的参数中获取打开当前页面路径中的参数</li><li>onShow： 页面显示 / 切入前台时触发调用。</li><li>onReady： 页面初次渲染完成时触发,一个页面只会调用一次。</li><li>onHide： 页面隐藏 / 切入后台时触发，如 navigateTo 或底部tab切换到其他页面，小程序切入后台等</li><li>onUnload： 页面卸载时触发。如 redirectTo 或 navigateBack 到其他页面时.</li></ul><p><strong><strong>6. 小程序怎么实现下拉刷新</strong></strong></p><p><strong>方案一 ：</strong></p><p>通过在 app.json 中，将 &quot;enablePullDownRefresh&quot;: true, 开启全局下拉刷新。</p><p>或者通过在组件 .json ，将 &quot;enablePullDownRefresh&quot;: true, 单组件下拉刷新。</p><p><strong>方案二：</strong></p><p>scroll-view ： 使用该滚动组件自定义刷新，通过 bindscrolltoupper 属性，当滚动到顶部/左边，会触发 scrolltoupper 事件，所以我们可以利用这个属性，来实现下拉刷新功能。</p><p><strong><strong>7. bindtap 和 catchtap 区别</strong></strong></p><ul><li>相同点：都是点击事件</li><li>不同点：bindtap 不会阻止冒泡，catchtap 可以阻止冒泡。</li></ul><p><strong><strong>8. 小程序有哪些传递数据的方法</strong></strong></p><ul><li><ol><li>使用全局变量</li></ol><ul><li>在 app.js 中的 this.globalData = { } 中放入要存储的数据。</li><li>在 组件.js 中，头部 引入 const app = getApp(); 获取到全局变量</li><li>直接使用 app.globalData.key 来进行赋值和获取值。</li></ul></li><li><ol start="2"><li>使用路由</li></ol><ul><li>wx.navigateTo 和 wx.redirectTo 时，可以通过在 url 后 拼接 + 变量，然后在 目标页面 通过在 onLoad 周期中，通过参数来获取传递过来的值。</li></ul></li><li><ol start="3"><li>使用本地缓存</li></ol></li></ul><p><strong><strong>9. 简述下 wx.navigateTo(), wx.redirectTo(), wx.switchTab(), wx.navigateBack(), wx.reLaunch() 区别</strong></strong></p><ul><li>wx.navigateTo() ： 保留当前页面，跳转到应用内的某个页面。但是不能跳到 tabbar 页面</li><li>wx.redirectTo() ： 关闭当前页面，跳转到应用内的某个页面。但是不允许跳转到 tabbar 页面</li><li>wx.switchTab() ： 跳转到 TabBar 页面，并关闭其他所有非 tabBar 页面</li><li>wx.navigateBack() ： 关闭当前页面，返回上一页面或多级页面。可通过getCurrentPages() 获取当前的页面栈，决定需要返回几层</li><li>wx.reLaunch() ： 关闭所有页面，打开到应用的某个页面。</li></ul><p><strong><strong>10. 小程序 wx:if 和 hidden 的区别</strong></strong></p><ul><li>wx:if ： 有更高的切换消耗。</li><li>hidden ： 有更高的初始渲染消耗。</li></ul><p>使用：频繁切换使用 hidden，运行时条件变化使用wx: if</p><p><strong><strong>11. app.json 全局配置文件描述</strong></strong></p><ul><li>pages ： 用于存放当前小程序的所有页面路径</li><li>window ： 小程序所有页面的顶部背景颜色，文字颜色配置。</li><li>tabBar ： 小程序底部的Tab ,最多5个，最少2个。</li></ul><p><strong><strong>12. 如何封装小程序请求</strong></strong></p><p>封装 wx.request 请求传递需要的参数( url , data , method , success 成功回调 , fail 失败回调 ) , 封装常用方法 POST , GET , DELETE , PUT .... 最后导出这些方法</p><p>然后新建一个 api.js 文件，导入封装好的方法，然后调取相应的方法，传递数据。</p><p><strong>wx.request 封装</strong></p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//获取小程序全局唯一app实例</span>
<span class="token keyword">var</span> host <span class="token operator">=</span> <span class="token string">&#39;******************&#39;</span><span class="token punctuation">;</span> <span class="token comment">//接口地址</span>

<span class="token comment">//POST请求</span>
<span class="token keyword">function</span> <span class="token function">post</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> success<span class="token punctuation">,</span>fail</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">request</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> postData<span class="token punctuation">,</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> doSuccess<span class="token punctuation">,</span> doFail<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//GET请求</span>
<span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> success<span class="token punctuation">,</span> fail</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">request</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> postData<span class="token punctuation">,</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> doSuccess<span class="token punctuation">,</span> doFail<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> method<span class="token punctuation">,</span> success<span class="token punctuation">,</span> fail</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    wx<span class="token punctuation">.</span><span class="token function">showLoading</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;正在加载中...&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    wx<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> host <span class="token operator">+</span> url<span class="token punctuation">,</span> <span class="token comment">//请求地址</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> method<span class="token punctuation">,</span> <span class="token comment">//请求方法</span>
        <span class="token literal-property property">header</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//请求头</span>
            <span class="token string-property property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json;charset=UTF-8&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">,</span> <span class="token comment">//请求参数</span>
        <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span> <span class="token comment">//返回数据格式</span>
        <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span> <span class="token comment">//响应的数据类型</span>
        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            wx<span class="token punctuation">.</span><span class="token function">hideLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//成功执行方法，参数值为res.data,直接将返回的数据传入</span>
            <span class="token function">success</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//失败执行方法</span>
            <span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">postRequest</span><span class="token operator">:</span> post<span class="token punctuation">,</span>
    <span class="token literal-property property">getRequest</span><span class="token operator">:</span> get<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>组件使用封装好的请求</strong></p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">var</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../utils/request.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//相对路径</span>

<span class="token keyword">var</span> params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token comment">//请求参数</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>userId
<span class="token punctuation">}</span>
http<span class="token punctuation">.</span><span class="token function">postRequest</span><span class="token punctuation">(</span><span class="token string">&quot;user/delUser&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;修改成功！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;修改失败！！！&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><strong>13. 小程序页面有哪些传递数据的方法？</strong></strong></p><ul><li>使用全局变量实现数据传递；</li><li>页面跳转时或重定向时，使用url带参数传递数据；</li><li>使用组件模板template传递参数；</li><li>使用缓存传递参数；</li><li>使用数据库传递参数；</li></ul><h1 id="二、简答题" tabindex="-1"><a class="header-anchor" href="#二、简答题" aria-hidden="true">#</a> <strong>二、简答题</strong></h1><p><strong><strong>1. 请你讲述一下微信小程序原理？</strong></strong></p><ul><li>1、微信小程序采用 JavaScript、WXML、WXSS 三种技术进行开发，从技术讲和现有的前端开发差不多， 但深入挖掘的话却又有所不同</li><li>2、JavaScript：首先 JavaScript 的代码是运行在微信 App 中的，并不是运行在浏览器中，因此一些 H5 技 术的应用，需要微信 App 提供对应的 API 支持，而这限制住了 H5 技术的应用，且其不能称为严格的 H5， 可以称其为伪 H5，同理，微信提供的独有的某些 API，H5 也不支持或支持的不是特别好</li><li>3、WXML：WXML 微信自己基于 XML 语法开发的，因此开发时，只能使用微信提供的现有标签，HTML 的标签是无法使用的</li><li>4、WXSS：WXSS 具有 CSS 的大部分特性，但并不是所有的都支持，而且支持哪些，不支持哪些并没有 详细的文档</li><li>5、微信的架构，是数据驱动的架构模式，它的 UI 和数据是分离的，所有的页面更新，都需要通过对数 据的更改来实现</li><li>6、小程序分为两个部分 webview 和 appService。其中 webview 主要用来展现 UI，appService 有来处理 业务逻辑、数据及接口调用。它们在两个进程中运行，通过系统层 JSBridge 实现通信，实现 UI 的渲染、事 件的处理</li></ul><p><strong><strong>2. 分析下微信小程序的优劣势</strong></strong></p><p>优势：</p><ul><li>1、无需下载，通过搜索和扫一扫就可以打开</li><li>2、良好的用户体验：打开速度快</li><li>3、开发成本要比 App 要低</li><li>4、安卓上可以添加到桌面，与原生 App 差不多</li><li>5、为用户提供良好的安全保障。小程序的发布，微信拥有一套严格的审查流程， 不能通过审查的小程序 是无法发布到线上的</li></ul><p>劣势：</p><ul><li>1、限制较多。页面大小不能超过 1M。不能打开超过 5 个层级的页面</li><li>2、样式单一。小程序的部分组件已经是成型的了，样式不可以修改。例如：幻灯片、导航</li><li>3、推广面窄，不能分享朋友圈，只能通过分享给朋友，附近小程序推广。其中附近小程序也受到微信的限制</li><li>4、依托于微信，无法开发后台管理功能</li></ul><p><strong><strong>3. 小程序调用后台接口遇到哪些问题？</strong></strong></p><ul><li>1、数据的大小有限制，超过范围会直接导致整个小程序崩溃，除非重启小程序；</li><li>2、小程序不可以直接渲染文章内容页这类型的 html 文本内容，若需显示要借住插件，但插件渲染会导致页 面加载变慢，所以最好在后台对文章内容的 html 进行过滤，后台直接处理批量替换 p 标签 div 标签为 view 标签， 然后其它的标签让插件来做，减轻前端的时间</li></ul><p><strong><strong>4. 小程序运行机制</strong></strong></p><ul><li>热启动：假如用户已经打开了某个小程序，在一定时间内再次打开小程序的话，这个时候我们就不再需要重新启动了，这需要把我们的后台打开的小程序切换到前台来使用。</li><li>冷启动：用户首次打开小程序或被微信主动销毁再次打开的情况，此时小程序需要重新加载启动。</li></ul><p><strong><strong>5. 小程序什么时候会主动销毁？</strong></strong></p><p>小程序在进入后台之后，客户端会帮我们在一定时间内维持我们的一个状态，超过五分钟后，会被微信主动销毁.</p><p>官方也没有明确说明 什么时候销毁，在不同机型表现也不一样，</p><p>2019年开发时：时间官方文档没有说明，但是经过询问一般指5分钟内</p><p>2020年开发时：时间官方文档没有说明，实测安卓没有固定时间，内存足够情况下，有时候一天了还在，有时候几分钟就没了。</p><p><strong><strong>6. 微信登陆授权流程</strong></strong></p><p><img src="`+p+'" alt="Untitled"></p><p><strong><strong>7. 微信小程序和h5的区别</strong></strong></p><ul><li>运行环境不同（小程序在微信运行，h5在浏览器运行）；</li><li>开发成本不同（h5需要兼容不同的浏览器）；</li><li>获取系统权限不同（系统级权限可以和小程序无缝衔接）；</li><li>应用在生产环境的运行流畅度（h5需不断对项目优化来提高用户体验）</li></ul>',60),l=[e];function i(c,u){return s(),a("div",null,l)}const k=n(o,[["render",i],["__file","微信小程序.html.vue"]]);export{k as default};
