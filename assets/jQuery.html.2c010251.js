import{_ as n,o as s,c as a,a as t}from"./app.74a5dc6f.js";const p={},e=t(`<h1 id="jquery" tabindex="-1"><a class="header-anchor" href="#jquery" aria-hidden="true">#</a> jQuery</h1><h1 id="一、jquery基础" tabindex="-1"><a class="header-anchor" href="#一、jquery基础" aria-hidden="true">#</a> <strong>一、jQuery基础</strong></h1><p><strong><strong>1. 你知道jQuery中的选择器吗，有哪些选择器</strong></strong></p><p>大致分为：基本选择器，层次选择器，表单选择器等</p><ul><li>基本选择器：id选择器，标签选择器，类选择器等</li><li>层次选择器：如：$(&quot;form input&quot;) 选择所有的form元素中的input元素 $(&quot;#main &gt; *&quot;)选择id为main的所有子元素</li><li>过滤选择器：如：$(&quot;tr:first&quot;)选择所有tr元素的第一个 $(&quot;tr:last&quot;)选择所有tr元素的最后一个</li><li>表单选择器：如：$(&quot;:input&quot;)选择所有的表单输入元素 $(&quot;:text&quot;)选择所有的text的input元素</li></ul><p><strong><strong>2. jQuery的美元符号$有什么作用？</strong></strong></p><p>回答：其实美元符号$只是”jQuery”的别名，它是jQuery的选择器，如下代码：</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然你也可以用jQuery来代替$，如下代码：</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">jQuery</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><strong>3. jQuery对象和DOM对象是怎样转换的</strong></strong></p><p>jQuery对象是一个包含了dom对象的数组 可以通过jQuery对象[下标]获取dom对象</p><p>将dom对象放入$(&quot;&quot;)中转为jQuery对象</p><p><strong><strong>4. jQuery中$.get()提交和$.post()提交的区别</strong></strong></p><p>1、$.get()使用GET方法来进行异步提交 $.post()使用POST方法来进行异步提交</p><p>2、get请求方式将参数跟在url后进行传递用户可见 post请求则是作为http消息的实体内容发送给服务器，用户不可见</p><p>3、post传输数据比get大</p><p>4、get请求的数据会被浏览器缓存 不安全</p><p><strong><strong>5. 怎么使用jQuery中的动画</strong></strong></p><ul><li>隐藏：hide()</li><li>显示：show()</li><li>淡入淡出：fadeIn()==淡入(显示) fadeOut()==淡出(消失)</li><li>滑动：slideUp()==向上滑动 slideDown()==向下滑动</li></ul><p><strong><strong>6. jQuery中使用过哪些插入节点的方法，他们的区别是什么</strong></strong></p><p><strong>在元素内部添加</strong></p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>append：向每个匹配的元素内部追加内容
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">我想说：</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;b&gt;你好&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">我想说：</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">你好</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>appendTo：将所有匹配的元素追加到指定的元素中
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">我想说：</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;b&gt;你好&lt;/b&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">我想说：</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">你好</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>prepend：向每个匹配的元素内部前置添加内容
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">我想说：</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;b&gt;你好&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">你好</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">我想说：</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>prependTo：将所有匹配的元素前置到指定的元素中
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">我想说：</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;b&gt;你好&lt;/b&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prependTo</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">你好</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">我想说：</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在元素外部添加</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>after：在每个匹配元素之后插入内容
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">我想说：</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;b&gt;你好&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">我想说：</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">你好</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>insertAfter：将所有配的元素插入到指定元素的后面
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">我想说：</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;b&gt;你好&lt;/b&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertAfter</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">我想说：</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">你好</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>before：在每个匹配的元素之前插入内容
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">我想说：</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;b&gt;你好&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">你好</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">我想说：</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>insertBefore：将所有匹配的元素插入到指定的元素的前面
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">我想说：</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;b&gt;你好&lt;/b&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">你好</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">我想说：</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><strong>7. jQuery中如何来获取和设置属性</strong></strong></p><p>可以用attr()获取和设置元素属性</p><p>removeAttr()方法来删除元素属性</p><p><strong><strong>8. 如何来设置和获取HTML和文本的值？</strong></strong></p><ul><li>获取HTMl：$(&quot;选择器&quot;).html()</li><li>获取文本的值：$(&quot;选择器&quot;).text()</li></ul><p><strong><strong>9. jQuery中有哪些方法可以遍历节点？</strong></strong></p><ul><li>children():获取匹配元素的子元素集合，不考虑后代元素 $(function(){$(&quot;div&quot;).children()})</li><li>next()获取匹配元素后面紧邻的同级元素</li><li>prev()获取匹配元素前紧邻的同级元素</li><li>siblings()获取匹配元素前后的所有同辈元素</li></ul><p><strong><strong>10. radio单选组的第二个元素为当前选中的值，该怎么去取</strong></strong></p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;input[type=radio]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>checked<span class="token operator">=</span><span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong><strong>11. 说出jQuery中常见的几种函数以及他们的含义是什么?</strong></strong></p><p>jQuery中常见的函数如下:</p><ul><li>1)get()取得所有匹配的DOM元素集合.</li><li>2)get(index)取得其中一个匹配的元素.index表示取得第几个匹配的元素.</li><li>3)append(content)向每个匹配的元素内部追加内容.</li><li>4)after(content)在每个匹配的元素之后插入内容.</li><li>5)html()/html(var)取得或设置匹配元素的html内容.</li><li>6)find(expr)搜索所有与指定表达式匹配的元素.</li><li>7)bind(type,[data],fn)为每个匹配元素的特定事件绑定事件处理函数.</li><li>8)empty()删除匹配的元素集合中所有的子节点.</li><li>9)hover(over,out)一个模仿悬停事件(鼠标移动到一个对象上面及移出这个对象)的方法.</li><li>10)attr(name)取得第一个匹配元素的属性值.</li><li>11)addClass(class)和removeClass(class)为指定的元素添加或移除样式.</li><li>12)css(name)访问第一个匹配元素的样式属性.</li><li>13)ajax([options])通过HTTP请求加载远程数据.</li><li>14)get(url,[data],[callback],[type])通过远程HTTP GET请求载入信息.</li><li>15)post(url,[data],[callback],[type])通过远程HTTP POST请求载入信息.</li><li>16)load(url,[data],[callback])载入远程HTML文件代码并插入至DOM中.</li></ul><h1 id="二、简答题" tabindex="-1"><a class="header-anchor" href="#二、简答题" aria-hidden="true">#</a> <strong>二、简答题</strong></h1><p><strong><strong>1、你为什么要使用jQuery？你觉得jquery有哪些好处？</strong></strong></p><ul><li>1、因为jQuery是轻量级的框架，大小不到30kb</li><li>2、它有强大的选择器，出色的DOM操作的封装</li><li>3、有可靠的事件处理机制(jQuery在处理事件绑定的时候相当的可靠)</li><li>4、完善的ajax(它的ajax封装的非常的好，不需要考虑复杂浏览器的兼容性和XMLHttpRequest对象的创建和使用的问题。)</li><li>5、出色的浏览器的兼容性</li><li>6、支持链式操作，隐式迭代</li><li>7、行为层和结构层的分离，还支持丰富的插件，jquery的文档也非常的丰富</li></ul><p><strong><strong>2. AJAX是什么？</strong></strong></p><p>AJAX(异步 JavaScript 和 XML)，是指一种创建交互式网页应用的网页开发技术。Ajax 它是与服务器交换数据的技术，在浏览器与 Web 服务器之间使用异步数据传输(HTTP 请求)，它在不重载全部页面的情况下，实现了对部分网页的更新。这样就可使网页从服务器请求少量的信息，而不是整个页面。</p><p><strong><strong>3. AJAX都有哪些优点和缺点？</strong></strong></p><p>ajax的优点</p><ul><li>1、最大的一点是页面无刷新，用户的体验非常好。</li><li>2、使用异步方式与服务器通信，具有更加迅速的响应能力。</li><li>3、可以把以前一些服务器负担的工作转嫁到客户端，利用客户端闲置的能力来处理，减轻服务器和带宽的负担，节约空间和宽带租用成本。并且减轻服务器的负担，ajax的原则是“按需取数据”，可以最大程度的减少冗余请求，和响应对服务器造成的负担。</li><li>4、基于标准化的并被广泛支持的技术，不需要下载插件或者小程序。</li></ul><p>ajax的缺点</p><ul><li>1、ajax不支持浏览器back按钮。</li><li>2、安全问题 AJAX暴露了与服务器交互的细节。</li><li>3、对搜索引擎的支持比较弱。</li><li>4、破坏了程序的异常机制。</li><li>5、不容易调试。</li></ul><p><strong><strong>4. AJAX最大的特点是什么。</strong></strong></p><p>Ajax可以实现动态刷新（局部刷新）</p><p>就是能在不更新整个页面的前提下维护数据。这使得Web应用程序更为迅捷地回应用户动作，并避免了在网络上发送那些没有改变过的信息。</p><p><strong><strong>5. 请介绍一下XMLhttprequest对象。</strong></strong></p><p>Ajax的核心是JavaScript对象XmlHttpRequest。该对象在Internet Explorer 5中首次引入，它是一种支持异步请求的技术。简而言之，XmlHttpRequest使您可以使用JavaScript向服务器提出请求并处理响应，而不阻塞用户。通过XMLHttpRequest对象，Web开发人员可以在页面加载以后进行页面的局部更新。</p><p><strong><strong>6. 什么是JSON,在什么情况下使用?</strong></strong></p><p>JSON(JavaScript Object Notation)是一种轻量级的数据交换格式.易于人阅读和编写,同时也易于机器解析和生成.JSON采用完全独立于语言的文本格式.</p><p>JSON最常见的用法之一,是从web服务器上读取JSON数据,将JSON数据转换为JavaScript对象,然后在网页中使用该数据.</p>`,61),l=[e];function o(c,i){return s(),a("div",null,l)}const k=n(p,[["render",o],["__file","jQuery.html.vue"]]);export{k as default};
